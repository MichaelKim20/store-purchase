version: '3.7'

services:
  store-purchase:
    container_name: store-purchase
    hostname: store-purchase
    image: bosagora/store-purchase:latest
    ports:
      - "3000:3000"
    volumes:
      - "./config/:/rollup/config/"
      - "./env/:/rollup/env/"
      - "./logs/:/rollup/logs/"
      - "./db/:/rollup/db/"
    restart: always
    networks:
      - bosagora_network
    environment:
      HOST_IP: 0.0.0.0
      HOST_PORT: 3000
      PRODUCTION_NET_URL: https://testnet.bosagora.org
      PRODUCTION_CHAIN_ID: 2019

  ipfs0:
    container_name: ipfs0
    image: ipfs/kubo:release
    ports:
      - "4001:4001" # ipfs swarm - expose if needed/wanted
      - "5001:5001" # ipfs api - expose if needed/wanted
      - "8080:8080" # ipfs gateway - expose if needed/wanted
    volumes:
      - node0_ipfs:/data/ipfs
    networks:
      - bosagora_network

  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: cluster0
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
      # Open API port (allows ipfs-cluster-ctl usage on host)
      - "127.0.0.1:9094:9094"
      # The cluster swarm port would need  to be exposed if this container
      # was to connect to cluster peers on other hosts.
      # But this is just a testing cluster.
      # - "9095:9095" # Cluster IPFS Proxy endpoint
      # - "9096:9096" # Cluster swarm endpoint
    volumes:
      - node0_ipfs_cluster:/data/ipfs-cluster
    networks:
      - bosagora_network

  ##################################################################################
  ## Cluster PEER 1 ################################################################
  ##################################################################################
  #
  #  ipfs1:
  #    container_name: ipfs1
  #    image: ipfs/kubo:release
  #    volumes:
  #      - node1_ipfs:/data/ipfs
  #    networks:
  #      - bosagora_network
  #
  #  cluster1:
  #    container_name: cluster1
  #    image: ipfs/ipfs-cluster:latest
  #    depends_on:
  #      - ipfs1
  #    environment:
  #      CLUSTER_PEERNAME: cluster1
  #      CLUSTER_SECRET: ${CLUSTER_SECRET}
  #      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001
  #      CLUSTER_CRDT_TRUSTEDPEERS: '*'
  #      CLUSTER_MONITORPINGINTERVAL: 2s
  #    volumes:
  #      - node1_ipfs_cluster:/data/ipfs-cluster
  #    networks:
  #      - bosagora_network

  ##################################################################################
  ## Cluster PEER 2 ################################################################
  ##################################################################################
  #
  #  # See Cluster PEER 0 for comments (all removed here and below)
  #  ipfs2:
  #    container_name: ipfs2
  #    image: ipfs/kubo:release
  #    volumes:
  #      - node2_ipfs:/data/ipfs
  #    networks:
  #      - bosagora_network
  #
  #  cluster2:
  #    container_name: cluster2
  #    image: ipfs/ipfs-cluster:latest
  #    depends_on:
  #      - ipfs2
  #    environment:
  #      CLUSTER_PEERNAME: cluster2
  #      CLUSTER_SECRET: ${CLUSTER_SECRET}
  #      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs2/tcp/5001
  #      CLUSTER_CRDT_TRUSTEDPEERS: '*'
  #      CLUSTER_MONITORPINGINTERVAL: 2s
  #    volumes:
  #      - node2_ipfs_cluster:/data/ipfs-cluster
  #    networks:
  #      - bosagora_network


  #   ipfs:
  #    container_name: ipfs
  #    hostname: ipfs
  #    image: ipfs/go-ipfs
  #    ports:
  #      - "8080:8080"
  #      - "4001:4001"
  #      - "4001:4001/udp"
  #      - "5001:5001"
  #    volumes:
  #      - ./ipfs:/data/ipfs
  #      - ./ipfs_staging:/staging
  #    restart: always
  #    networks:
  #      - ipfs-network

volumes:
  node0_ipfs:
  node0_ipfs_cluster:
#  node1_ipfs:
#  node1_ipfs_cluster:
#  node2_ipfs:
#  node2_ipfs_cluster:

networks:
  bosagora_network:
    driver: bridge
#    external: true
#    internal: true
